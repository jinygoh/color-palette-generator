/* Dark Theme Variables */
:root {
    --bg-color: #1a1a1a; /* Very dark grey, almost black */
    --primary-surface-color: #2c2c2c; /* Dark grey for surfaces like cards, sections */
    --secondary-surface-color: #3a3a3a; /* Slightly lighter grey for inputs, etc. */
    --text-color: #e0e0e0; /* Light grey for text */
    --text-color-secondary: #b0b0b0; /* Medium grey for less important text */
    --accent-color-primary: #007bff; /* Vibrant blue for primary actions */
    --accent-color-primary-hover: #0056b3;
    --accent-color-secondary: #5cb85c; /* Green for secondary/positive actions */
    --accent-color-secondary-hover: #4cae4c;
    --border-color: #444; /* Darker border color */
    --shadow-color: rgba(0, 0, 0, 0.5); /* Darker shadow for depth */
    --input-bg-color: #333;
    --input-text-color: #e0e0e0;
    --input-border-color: #555;
}

body {
    font-family: sans-serif;
    margin: 0;
    background-color: var(--bg-color);
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    min-height: 100vh; /* Keep this to ensure footer sticks down if content IS short */
    /* Consider overflow: hidden; if absolutely no scroll is desired, but can hide content */
}

header {
    background-color: var(--primary-surface-color);
    color: var(--text-color);
    padding: 1rem 2rem; /* Restored padding */
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 1px 3px var(--shadow-color); /* Reduced shadow */
    border-bottom: 1px solid var(--border-color);
}

header h1 {
    margin: 0;
    font-size: 1.3rem; /* Reduced font size */
}

#randomPaletteBtn {
    background-color: var(--accent-color-secondary);
    color: var(--bg-color);
    border: none;
    padding: 0.6rem 1.2rem; /* Reduced padding */
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 1rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

#randomPaletteBtn:hover {
    background-color: var(--accent-color-secondary-hover);
}

main {
    flex-grow: 1;
    padding: 1.5rem; /* Adjusted padding */
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    box-sizing: border-box;
}

/* Wrapper for Top Area (Button + Instructions) */
#topAreaWrapper {
    display: flex;
    flex-direction: column; /* Stack items vertically */
    align-items: center; /* Center items when stacked */
    gap: 1.5rem; /* Space between button and instructions, was 1rem, increased for clarity */
    width: 100%;
    /* max-width: 1200px; */ /* Let content within define overall width, or set on main */
    margin: 0 auto 1.5rem auto; /* Center wrapper and add space below */
    padding: 0 1rem; /* Add horizontal padding to the wrapper if needed for alignment with content below */
    box-sizing: border-box;
}

/* Top Controls Container for Random Palette Button */
#topControlsContainer {
    /* width: 100%; */
    /* max-width: 900px; */
    /* margin-bottom: 0.75rem; */
    /* display: flex; */
    flex-shrink: 0;
}

#randomPaletteBtn {
    /* Retains its original styling for color, padding, etc. */
    /* No specific flex item properties here unless it's always in a flex container */
    /* If it was previously in header, header specific align-items might have affected it. */
    /* Now it's more standalone, can add margin if needed e.g. margin-right: auto to push left */
}


/* Styles for Usage Instructions */
#usageInstructions {
    /* display: flex; */
    /* align-items: center; */
    /* gap: 1.5rem; */
    background-color: var(--primary-surface-color);
    color: var(--text-color-secondary);
    padding: 0.75rem 1rem;
    border-radius: 8px;
    margin-bottom: 0; /* Margin handled by parent gap or topAreaWrapper margin */
    width: 100%;
    /* max-width: 900px; */
    box-sizing: border-box;
    border: 1px solid var(--border-color);
    box-shadow: 0 2px 8px var(--shadow-color);
    flex-grow: 1; /* Instructions box takes remaining space */
}

/* #usageInstructions #randomPaletteBtn { */ /* No longer needed as button is outside */
    /* flex-shrink: 0; */
/* } */

#usageInstructions p {
    margin: 0;
    line-height: 1.6; /* Restored line height */
    font-size: 0.95rem; /* Adjusted font size */
    /* flex-grow: 1; */ /* No longer needed */
}
#usageInstructions strong {
    color: var(--text-color);
}

/* Responsive adjustment for instructions section if button and text become too cramped */
/* Responsive adjustment for top area */
@media (max-width: 768px) { /* Wider breakpoint for stacking button and instructions */
    #topAreaWrapper {
        flex-direction: column; /* Stack button and instructions */
        align-items: center; /* Center items when stacked */
        gap: 1rem; /* Reduce gap when stacked */
    }
    #topControlsContainer {
        margin-bottom: 0; /* Removed specific margin, gap handles it */
        width: auto; /* Allow button to dictate container width */
    }
    #usageInstructions {
        max-width: 100%; /* Allow instructions to take full width of centered parent */
        width: calc(100% - 2rem); /* Considering parent padding */
        min-width: 280px; /* Ensure it doesn't get too squished */
    }
}


#interactiveGeneratorSection {
    background-color: var(--primary-surface-color);
    padding: 1.5rem 2rem;
    border-radius: 8px;
    box-shadow: 0 2px 10px var(--shadow-color);
    margin-bottom: 2rem;
    width: 100%;
    max-width: 700px; /* Max width for the controls section */
    box-sizing: border-box;
    border: 1px solid var(--border-color);
}

/* New layout container for generator section */
#interactiveGeneratorSection .generator-layout-container { /* Increased specificity */
    display: flex;
    flex-direction: column; /* Default: stack pickers above controls */
    gap: 1.5rem; /* Gap when stacked */
}

#visualPickerGroup {
    display: flex;
    justify-content: center; /* Center the colorPickerContainer */
    align-items: center;
}

#colorPickerContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
    /* margin-bottom: 1.5rem; */ /* Margin now handled by parent gaps */
    flex-wrap: wrap;
}

.controls-group-right {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* Space between control groups (hex, harmony, button) */
}

.hex-input-group {
    /* Add specific margin if needed, e.g., margin-bottom: 0.5rem; */
}

#hueWheelCanvas,
#slPickerCanvas {
    border: 1px solid var(--border-color);
    cursor: crosshair;
    box-shadow: 0 0 5px var(--shadow-color);
}

#hueWheelCanvas {
    border-radius: 50%; /* Make it visually a circle */
}

#interactiveGeneratorSection h2 {
    margin-top: 0;
    margin-bottom: 1.5rem;
    text-align: center;
    color: var(--text-color);
}

/* ID #baseColorSelectionGroup is no longer used */
/*
#baseColorSelectionGroup {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
}
*/

/* Styles for individual control groups (label + input/select) */
.control-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    width: 100%; /* Make control groups take full width of their container */
}

#interactiveGeneratorSection .controls {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center items if they don't take full width */
    gap: 1rem;
    width: 100%; /* Ensure controls div takes available width */
}

#interactiveGeneratorSection label {
    font-weight: bold;
    color: var(--text-color-secondary);
    font-size: 0.9rem; /* Kept from previous step, seems reasonable */
}

#interactiveGeneratorSection input[type="text"],
#interactiveGeneratorSection select {
    background-color: var(--input-bg-color);
    color: var(--input-text-color);
    padding: 0.75rem; /* Kept from previous step, seems reasonable */
    border: 1px solid var(--input-border-color);
    border-radius: 4px;
    font-size: 1rem; /* Kept from previous step */
    width: 100%;
    box-sizing: border-box;
}
#interactiveGeneratorSection input[type="text"]:focus,
#interactiveGeneratorSection select:focus {
    border-color: var(--accent-color-primary);
    outline: none;
    box-shadow: 0 0 0 2px var(--accent-color-primary-hover);
}


#generateHarmonyBtn {
    background-color: var(--accent-color-primary);
    color: white; /* White text on blue button */
    border: none;
    padding: 0.75rem 1.5rem;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 1rem;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s ease;
    align-self: flex-start;
    margin-top: 0.5rem;
}

#generateHarmonyBtn:hover {
    background-color: var(--accent-color-primary-hover);
}

.separator {
    border: none;
    border-top: 1px solid var(--border-color);
    margin: 2rem 0;
    width: 100%;
    max-width: 1200px;
}

#paletteDisplayTitleSection {
    width: 100%;
    max-width: 1200px; /* Match paletteDisplay max-width */
    text-align: center;
    margin-bottom: 1rem;
}

#paletteDisplayTitle {
    display: block;
    width: 100%;
    margin: 0;
    color: var(--text-color);
}

#paletteDisplay {
    display: flex;
    flex-wrap: wrap; /* Allow multiple palettes to wrap */
    justify-content: center; /* Center palettes if they wrap */
    gap: 2rem; /* Space between multiple palettes */
    width: 100%;
    max-width: 1200px; /* Max width for the content area */
}

.palette {
    background-color: var(--primary-surface-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 10px var(--shadow-color);
    display: flex !important;
    flex-direction: column !important; /* Stack swatches vertically initially */
    align-items: center !important;
    gap: 1rem !important; /* Space between color swatch containers */
    width: fit-content !important; /* Adjust to content or set a fixed width */
    min-width: 200px !important; /* Minimum width for a palette */
}

.palette h2 { /* Titles within a palette, if any were to be added */
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.2rem;
    color: var(--text-color-secondary);
    text-align: center;
}

.color-swatch-container {
    display: flex;
    flex-direction: column; /* Stack swatch and hex code vertically */
    align-items: center;
    margin-bottom: 10px; /* Space between each color info block */
}

.color-swatch {
    width: 150px;
    height: 150px;
    border-radius: 5px;
    border: 1px solid var(--border-color); /* Darker border for swatches */
    margin-bottom: 0.5rem; /* Space between swatch and hex code */
    cursor: pointer; /* Indicate it's clickable for copy */
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

.color-swatch:hover {
    transform: scale(1.05);
    box-shadow: 0 0 10px var(--accent-color-primary); /* Glow effect on hover */
}

.hex-code {
    font-family: 'Courier New', Courier, monospace;
    background-color: var(--secondary-surface-color); /* Darker background for hex codes */
    color: var(--text-color); /* Light text for hex codes */
    padding: 0.25rem 0.5rem; /* Kept from previous step */
    border-radius: 3px;
    font-size: 0.9rem; /* Kept from previous step */
    cursor: pointer; /* Indicate it's clickable for copy */
    user-select: text; /* Allow text selection for manual copy */
    border: 1px solid var(--border-color);
}

.hex-code:hover {
    background-color: var(--input-bg-color); /* Even darker on hover */
    border-color: var(--accent-color-secondary);
}

footer {
    background-color: var(--primary-surface-color);
    color: var(--text-color-secondary);
    text-align: center;
    padding: 1rem;
    font-size: 0.9rem;
    border-top: 1px solid var(--border-color);
}

/* Main Content Wrapper for Side-by-Side Layout */
#mainContentWrapper {
    display: flex;
    flex-direction: column; /* Default for smaller screens */
    gap: 2rem; /* Gap between generator and palette sections when stacked */
    width: 100%;
    align-items: flex-start; /* Align items to the start when stacked */
}

#interactiveGeneratorSection,
#paletteOutputSection {
    width: 100%; /* Full width when stacked */
    box-sizing: border-box;
}

#paletteOutputSection {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center title and palette display */
}


/* Separator Styling */
.separator {
    border: none;
    border-top: 1px solid var(--border-color);
    margin: 2rem 0; /* Default for horizontal separator */
    width: 100%;
    max-width: 1200px;
}

.vertical-separator { /* Initially hidden, shown in side-by-side layout */
    display: none;
    border: none;
    border-left: 1px solid var(--border-color);
    margin: 0; /* Remove horizontal margins, rely on parent gap */
    align-self: stretch; /* Makes it take full height of flex container */
}


/* Responsive adjustments */
/* Medium screens - still stacked, but allow generator to not be overly wide */
@media (min-width: 768px) {
    #interactiveGeneratorSection {
        max-width: 700px; /* Keep interactive section from becoming too wide */
        align-self: center; /* Center it if it's narrower than mainContentWrapper */
    }
     #paletteOutputSection {
        max-width: 1200px; /* Palette can be wider */
        align-self: center;
    }

    /* DEBUGGING: Force palette horizontal layout */
    #paletteDisplay .palette { /* Increased specificity */
        display: flex !important;
        flex-direction: row !important;
        flex-wrap: wrap !important;
        justify-content: center !important;
        /* width: fit-content !important; */ /* Already in base, or use 100% if box should stretch */
    }

    .color-swatch-container {
        margin-right: 1rem; /* Space between swatch containers when horizontal */
        margin-bottom: 1rem; /* Consistent bottom margin */
    }

     .color-swatch { /* Swatch size adjustment for medium screens */
        width: 100px; /* Slightly smaller for medium screens if palette is also narrower */
        height: 100px;
    }
}

/* Large screens - STACKED layout for main sections, but side-by-side INSIDE generator */
@media (min-width: 1024px) {
    #mainContentWrapper {
        flex-direction: row;
        align-items: flex-start;
        gap: 2rem;
    }

    /* DEBUGGING: Force internal layout for generator */
    #interactiveGeneratorSection .generator-layout-container {
        flex-direction: row;
    }

    #interactiveGeneratorSection {
        flex: 1 1 50%;
    }

    #paletteOutputSection {
        flex: 1 1 50%;
    }

    /* Restore some original spacing within sections if desired, or keep compactness */
    #interactiveGeneratorSection h2,
    #paletteDisplayTitleSection h2 {
        margin-top: 0; /* Original: 0 */
        margin-bottom: 1.5rem; /* Original: 1.5rem */
        font-size: 1.2rem; /* Keep slightly reduced from original 1.5rem */
    }

    #colorPickerContainer {
        margin-bottom: 1.5rem; /* Original: 1.5rem */
        gap: 20px; /* Original: 20px */
    }

    #baseColorSelectionGroup {
        margin-bottom: 1.5rem; /* Original: 1.5rem */
        gap: 1.5rem; /* Original: 1.5rem */
    }

    #interactiveGeneratorSection .controls {
        gap: 1rem; /* Original: 1rem */
    }

    .palette {
        padding: 1.5rem; /* Original: 1.5rem */
        gap: 1rem; /* Original: 1rem */
    }

    .vertical-separator {
        display: none !important; /* Ensure vertical separator is hidden */
    }

    /* Horizontal separator can be re-added if desired between sections */
    /* e.g., by adding <hr class="separator"> between sections in HTML and ensuring .separator is styled */

     .color-swatch { /* Restore original swatch sizes for large screens */
        width: 150px; /* Original base size before multiple resizes */
        height: 150px;
    }
}

/* Remove the 1200px breakpoint if 1024px now defines the largest swatch size, or adjust as needed */
/* For simplicity, let 1024px be the point where swatches get their larger size */
@media (min-width: 1200px) {
    /* This breakpoint might no longer be needed if 1024px handles the largest size */
    /* Or can be used for even larger swatches if desired. */
    /* For now, let's ensure 1024px has the final say on swatch size */
     .color-swatch {
        width: 150px;
        height: 150px;
    }
}
